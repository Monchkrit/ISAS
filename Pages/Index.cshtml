@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="container home-box text-center">
    
    <h1 class="display-3">Welcome to Internet Sites and Stores</h1>
    <div>        
        <p class="story">Internet Sites and Stores is a custom web development company that will help you to develop a presence online for your business
                or organization. It is based in Greenfield, California and serves Monterey County.</p>
    </div>
    <div class="container">        
    <br />
        <h1 class="ss-heading">Sample Sites</h1>
        <div class="row">            
        <hr />
            <div class="app-box story">
                <h4><a href="https://www.plantformsoftware.com" target="_blank"><img src="../images/PlantForm-TradeMark-NoBack-FB.jpg" class="img-fluid" />PlantForm</a></h4>
                <p>Original Application for Market Gardens</p>
                <p>A three sided marketplace that integrates with Google Maps
                    and picture upload. Features garden management, market listing/ordering,
                    and labor management features. Provides support for private
                    and community gardens.
                </p>
            </div>
            <div class="app-box story">
                <h4><a href="https://nomster-donny-buckman.herokuapp.com/" target="_blank" ><img src="../images/nomster.png" class="img-fluid" />Nomster</a></h4>
                <p>A Yelp clone that integrates with the Google Maps
                    and includes features like user comments, star ratings,
                    and user authentication.
                </p>
                <a href="https://github.com/Monchkrit/nomster" target="_blank" >GitHub Repository</a>
            </div>
        </div>
        <div class="row">
            <div class="app-box story">
                <h4><a href="https://flixter-donny-buckman.herokuapp.com/" target="_blank"><img src="../images/flixter.png" class="img-fluid" />Flixter</a></h4>
                <p>
                    A two-sided, video-streaming marketplace platform that features credit card payment capabilities, user role management, 
                    complex user interfaces, and advanced database relationships.
                </p>
                <a href="https://github.com/Monchkrit/flixter" target="_blank" >GitHub Repository</a>
            </div>
            <div class="app-box story">
                <h4><a href="https://splurty-donny-buckman.herokuapp.com/" target="_blank"><img src="../images/splurty.png" class="img-fluid" />Splurty</a></h4>
                <p>
                    A database-powered quote generator with a mobile-first design,
                    using the Ruby on Rails framework, HTML, and CSS. Uses Git and GitHub for
                    version control, and launced on Heroku.
                </p>
                <a href="https://github.com/Monchkrit/splurty" target="_blank" >GitHub Repository</a>
            </div>
        </div>
        <div class="row">
            <div class="app-box story">
                <h4><a href="https://grammable-donny-buckman.herokuapp.com/" target="_blank"><img src="../images/grammable.png" class="img-fluid" />Grammable</a></h4>
                <p>
                    An Instragram clone that was build using industry-standard, test-driven
                    development following numerous red/green/refactor cycles.
                </p>
                <a href="https://github.com/Monchkrit/grammable" target="_blank" >GitHub Repository</a>
            </div>            
        </div>
    </div>
    <br />
    <h1 class="ss-heading" id="samplecode">Sample Code</h1>
        <div class="row">
            <div>
                <h4><a href="https://github.com/Monchkrit/AspDotNetVidzy" target="_blank">Vidly ASP.net Web App GitHub Repository</a></h4>
                <pre class="code-sample"><code>
                    public ActionResult Save(Movie movie)
                    {
                    if (ModelState.IsValid)
                    {
                        if (movie.Id == 0)
                        {
                        _context.Movies.Add(movie);
                        }
                        else
                        {
                        var movieInDb = _context.Movies.Single(m => m.Id == movie.Id);
                        movieInDb.GenreId = movie.GenreId;
                        movieInDb.Name = movie.Name;
                        movieInDb.ReleaseDate = movie.ReleaseDate;
                        movieInDb.Stock = movie.Stock;
                        }

                        _context.SaveChanges();

                        return RedirectToAction("Index", "Movies");
                    }
                </code></pre>
            </div>
        </div>
</div>